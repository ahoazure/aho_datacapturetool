# Generated by Django 2.1.2 on 2021-03-06 13:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import parler.fields
import parler.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('regions', '0015_stglocationcodes'),
    ]

    operations = [
        migrations.CreateModel(
            name='FacilityServiceAvailability',
            fields=[
                ('availability_id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=36, unique=True, verbose_name='Unique ID')),
                ('code', models.CharField(blank=True, max_length=50, unique=True)),
                ('provided', models.BooleanField(default=False, verbose_name='Service Provided last 3 Months?')),
                ('specialunit', models.BooleanField(default=False, verbose_name='Specialized Unit Provided?')),
                ('staff', models.BooleanField(default=False, verbose_name='Staff Capacity Appropriate?')),
                ('infrastructure', models.BooleanField(default=False, verbose_name='Infrastructure Capacity Appropriate?')),
                ('supplies', models.BooleanField(default=False, verbose_name='Supplies Appropriate?')),
                ('date_assessed', models.DateField(default=django.utils.timezone.now, help_text='This marks the start of reporting period', verbose_name='Assessment Date')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Service Availability',
                'verbose_name_plural': '   Services Avilability',
                'db_table': 'stg_facility_services_availability',
                'ordering': ('domain',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FacilityServiceProvision',
            fields=[
                ('capacity_id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=36, unique=True, verbose_name='Unique ID')),
                ('code', models.CharField(blank=True, max_length=45, unique=True)),
                ('available', models.PositiveIntegerField(help_text='The input must be a zero or positive integer', verbose_name='Number available')),
                ('functional', models.PositiveIntegerField(help_text='Functional units used in the last month', verbose_name='Number Functional')),
                ('date_assessed', models.DateField(default=django.utils.timezone.now, help_text='This marks the start of reporting period', verbose_name='Assessment Date')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Provision Capacity',
                'verbose_name_plural': '   Provision Capacities',
                'db_table': 'stg_facility_services_provision',
                'ordering': ('domain',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FacilityServiceReadiness',
            fields=[
                ('readiness_id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=36, unique=True, verbose_name='Unique ID')),
                ('code', models.CharField(blank=True, max_length=45, unique=True)),
                ('available', models.PositiveIntegerField(help_text='The input must be a zero or positive integer', verbose_name='Number available')),
                ('require', models.PositiveIntegerField(help_text='Number of units needed for adequacy', verbose_name='Number needed')),
                ('date_assessed', models.DateField(default=django.utils.timezone.now, help_text='This marks the start of reporting period', verbose_name='Assessment Date')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Service Readiness',
                'verbose_name_plural': '   Service Readiness',
                'db_table': 'stg_facility_services_readiness',
                'ordering': ('domain',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StgFacilityOwnership',
            fields=[
                ('owner_id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=36, unique=True, verbose_name='Unique ID')),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Code')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Facility Owner',
                'verbose_name_plural': ' Facility Ownerhip',
                'db_table': 'stg_facility_owner',
                'ordering': ('translations__name',),
                'managed': True,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgFacilityOwnershipTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=230, verbose_name='Facility Owner')),
                ('shortname', models.CharField(max_length=50, unique=True, verbose_name='Short Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='facilities.StgFacilityOwnership')),
            ],
            options={
                'verbose_name': 'Facility Owner Translation',
                'db_table': 'stg_facility_owner_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgFacilityServiceAreas',
            fields=[
                ('area_id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=36, unique=True, verbose_name='Unique ID')),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Code')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Service Area',
                'verbose_name_plural': ' Service Areas',
                'db_table': 'stg_facility_service_area',
                'ordering': ('translations__name',),
                'managed': True,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgFacilityServiceAreasTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=230, verbose_name='Provision Area')),
                ('shortname', models.CharField(max_length=50, unique=True, verbose_name='Short Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='facilities.StgFacilityServiceAreas')),
            ],
            options={
                'verbose_name': 'Service Area Translation',
                'db_table': 'stg_facility_service_area_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgFacilityServiceIntervention',
            fields=[
                ('intervention_id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=36, unique=True, verbose_name='Unique ID')),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Intervention Code')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Facility Servce Intervention',
                'verbose_name_plural': ' Service Interventions',
                'db_table': 'stg_facility_service_intervention',
                'ordering': ('translations__name',),
                'managed': True,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgFacilityServiceInterventionTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=230, verbose_name='Intervention Name')),
                ('shortname', models.CharField(max_length=50, unique=True, verbose_name='Short Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='facilities.StgFacilityServiceIntervention')),
            ],
            options={
                'verbose_name': 'Facility Servce Intervention Translation',
                'db_table': 'stg_facility_service_intervention_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgFacilityServiceMeasureUnits',
            fields=[
                ('infra_id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=36, unique=True, verbose_name='Unique ID')),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Code')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Provision Unit',
                'verbose_name_plural': 'Provision Units',
                'db_table': 'stg_facility_service_units',
                'ordering': ('translations__name',),
                'managed': True,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgFacilityServiceMeasureUnitsTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=230, verbose_name='Units of Provision')),
                ('shortname', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Short Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='facilities.StgFacilityServiceMeasureUnits')),
            ],
            options={
                'verbose_name': 'Provision Unit Translation',
                'db_table': 'stg_facility_service_units_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgFacilityType',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=36, unique=True, verbose_name='Unique ID')),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Facility Code')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Facility Type',
                'verbose_name_plural': ' Facility Types',
                'db_table': 'stg_facility_type',
                'ordering': ('translations__name',),
                'managed': True,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgFacilityTypeTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=230, verbose_name='Facility Type')),
                ('shortname', models.CharField(max_length=50, unique=True, verbose_name='Short Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Brief Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='facilities.StgFacilityType')),
            ],
            options={
                'verbose_name': 'Facility Type Translation',
                'db_table': 'stg_facility_type_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgHealthFacility',
            fields=[
                ('facility_id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=36, unique=True, verbose_name='Unique ID')),
                ('code', models.CharField(blank=True, max_length=45, unique=True)),
                ('name', models.CharField(max_length=230, verbose_name='Facility Name')),
                ('shortname', models.CharField(blank=True, max_length=230, null=True, verbose_name='Short Name (Abbreviation)')),
                ('admin_location', models.CharField(blank=True, max_length=230, null=True, verbose_name='Administrative Location')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Contact Address')),
                ('email', models.EmailField(blank=True, max_length=250, null=True, unique=True, verbose_name='Email')),
                ('phone_code', models.CharField(blank=True, help_text='Specific country code for the phone number such as +242 is         automatically retrieved from database of AFRO member countries', max_length=5, verbose_name='Phone Code')),
                ('phone_part', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Format:'999999999' min 8, maximum 15.", regex='^[0-9]{8,15}$')], verbose_name='Phone Number')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone format: '+999999999' maximum 15.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Telephone')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('altitude', models.FloatField(blank=True, null=True, verbose_name='Altitude (M)')),
                ('geosource', models.CharField(blank=True, max_length=500, null=True, verbose_name='Geo-source (LL source)')),
                ('url', models.URLField(blank=True, max_length=2083, null=True, verbose_name='Web (URL)')),
                ('status', models.CharField(choices=[('active', 'Active'), ('closed', 'Closed')], default='active', max_length=10, verbose_name='Status')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Health Facility',
                'verbose_name_plural': '    Health Facilities',
                'db_table': 'stg_health_facility',
                'ordering': ('name',),
                'managed': True,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgHealthFacilityTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Facility Description')),
            ],
            options={
                'verbose_name': 'Health Facility Translation',
                'db_table': 'stg_health_facility_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgServiceDomain',
            fields=[
                ('domain_id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=36, unique=True, verbose_name='Unique ID')),
                ('category', models.SmallIntegerField(choices=[(1, 'Availability'), (2, 'Capacity'), (3, 'Readiness')], verbose_name='Service Category')),
                ('level', models.CharField(choices=[('Level 0', 'Level 0'), ('Level 1', 'Level 1'), ('Level 2', 'Level 2'), ('Level 3', 'Level 3')], default='Level 0', max_length=50, verbose_name='Category Level')),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Code')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='facilities.StgServiceDomain', verbose_name='Parent Domain')),
            ],
            options={
                'verbose_name': 'Facility Service',
                'verbose_name_plural': ' Facility Services',
                'db_table': 'stg_facility_services',
                'ordering': ('translations__name',),
                'managed': True,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgServiceDomainTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=230, verbose_name='Service Name')),
                ('shortname', models.CharField(max_length=45, null=True, verbose_name='Short Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Service Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='facilities.StgServiceDomain')),
            ],
            options={
                'verbose_name': 'Facility Service Translation',
                'db_table': 'stg_facility_services_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FacilityServiceAvailabilityProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Service Availability',
                'verbose_name_plural': '  Service Availability',
                'managed': False,
                'proxy': True,
            },
            bases=('facilities.stghealthfacility',),
        ),
        migrations.CreateModel(
            name='FacilityServiceProvisionProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Service Capacity',
                'verbose_name_plural': '  Service Capacity',
                'managed': False,
                'proxy': True,
            },
            bases=('facilities.stghealthfacility',),
        ),
        migrations.CreateModel(
            name='FacilityServiceReadinesProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Service Readiness',
                'verbose_name_plural': '  Service Readiness',
                'managed': False,
                'proxy': True,
            },
            bases=('facilities.stghealthfacility',),
        ),
        migrations.AddField(
            model_name='stghealthfacilitytranslation',
            name='master',
            field=parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='facilities.StgHealthFacility'),
        ),
        migrations.AddField(
            model_name='stghealthfacility',
            name='location',
            field=models.ForeignKey(default=24, on_delete=django.db.models.deletion.PROTECT, to='regions.StgLocationCodes', verbose_name='Facility Country'),
        ),
        migrations.AddField(
            model_name='stghealthfacility',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.StgFacilityOwnership', verbose_name='Facility Ownership'),
        ),
        migrations.AddField(
            model_name='stghealthfacility',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.StgFacilityType', verbose_name='Facility Type'),
        ),
        migrations.AddField(
            model_name='stghealthfacility',
            name='user',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Admin User (Email)'),
        ),
        migrations.AddField(
            model_name='stgfacilityservicemeasureunits',
            name='domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.StgServiceDomain', verbose_name='Service Provision Category'),
        ),
        migrations.AddField(
            model_name='stgfacilityserviceintervention',
            name='domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.StgServiceDomain', verbose_name='Service Domain'),
        ),
        migrations.AddField(
            model_name='stgfacilityserviceareas',
            name='intervention',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.PROTECT, to='facilities.StgFacilityServiceIntervention', verbose_name='Intervention Areas'),
        ),
        migrations.AddField(
            model_name='facilityservicereadiness',
            name='domain',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.PROTECT, to='facilities.StgServiceDomain', verbose_name='Readiness Domain'),
        ),
        migrations.AddField(
            model_name='facilityservicereadiness',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.StgHealthFacility', verbose_name='Facility Name'),
        ),
        migrations.AddField(
            model_name='facilityservicereadiness',
            name='units',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='facilities.StgFacilityServiceMeasureUnits', verbose_name='Units of Provision'),
        ),
        migrations.AddField(
            model_name='facilityservicereadiness',
            name='user',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Admin User (Email)'),
        ),
        migrations.AddField(
            model_name='facilityserviceprovision',
            name='domain',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.PROTECT, to='facilities.StgServiceDomain', verbose_name='Provision Domain'),
        ),
        migrations.AddField(
            model_name='facilityserviceprovision',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.StgHealthFacility', verbose_name='Facility Name'),
        ),
        migrations.AddField(
            model_name='facilityserviceprovision',
            name='units',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='facilities.StgFacilityServiceMeasureUnits', verbose_name='Units of Provision'),
        ),
        migrations.AddField(
            model_name='facilityserviceprovision',
            name='user',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Admin User (Email)'),
        ),
        migrations.AddField(
            model_name='facilityserviceavailability',
            name='domain',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.PROTECT, to='facilities.StgServiceDomain', verbose_name='Service Domain'),
        ),
        migrations.AddField(
            model_name='facilityserviceavailability',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.StgHealthFacility', verbose_name='Facility Name'),
        ),
        migrations.AddField(
            model_name='facilityserviceavailability',
            name='intervention',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='facilities.StgFacilityServiceIntervention', verbose_name='Intervention Areas'),
        ),
        migrations.AddField(
            model_name='facilityserviceavailability',
            name='service',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='facilities.StgFacilityServiceAreas', verbose_name='Service provision Areas'),
        ),
        migrations.AddField(
            model_name='facilityserviceavailability',
            name='user',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Admin User (Email)'),
        ),
        migrations.AlterUniqueTogether(
            name='stgservicedomaintranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='stghealthfacilitytranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='stgfacilitytypetranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='stgfacilityservicemeasureunitstranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='stgfacilityserviceinterventiontranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='stgfacilityserviceareastranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='stgfacilityownershiptranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='facilityserviceavailability',
            unique_together={('domain', 'facility', 'intervention', 'service', 'date_assessed')},
        ),
    ]
