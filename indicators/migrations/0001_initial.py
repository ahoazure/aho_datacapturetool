# Generated by Django 2.1.2 on 2020-07-23 04:46

from django.db import migrations, models
import django.db.models.deletion
import parler.fields
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('home', '0001_initial'),
        ('regions', '0002_auto_20200723_0745'),
    ]

    operations = [
        migrations.CreateModel(
            name='FactDataIndicator',
            fields=[
                ('fact_id', models.AutoField(primary_key=True, serialize=False)),
                ('numerator_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Numerator')),
                ('denominator_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Denominator')),
                ('value_received', models.DecimalField(blank=True, decimal_places=2, max_digits=20, verbose_name='Value')),
                ('min_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Minimum Value')),
                ('max_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Maximum Value')),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Target Value')),
                ('start_period', models.IntegerField(default=2020, help_text='This Year marks the start of reporting period', verbose_name='Start Year')),
                ('end_period', models.IntegerField(default=2020, help_text='This marks the end of reporting. The value must be current             year or greater than the start year', verbose_name='Ending Year')),
                ('period', models.CharField(blank=True, max_length=25, verbose_name='Period')),
                ('comment', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10, verbose_name='Approval Status')),
                ('string_value', models.CharField(blank=True, max_length=500, null=True, verbose_name='Remarks')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
                ('categoryoption', models.ForeignKey(default=999, on_delete=django.db.models.deletion.PROTECT, to='home.StgCategoryoption', verbose_name='Modality')),
                ('datasource', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.StgDatasource', verbose_name='Data Source')),
            ],
            options={
                'verbose_name': 'Indicator Record',
                'verbose_name_plural': '  Single-Record Form',
                'db_table': 'fact_data_indicator',
                'ordering': ('indicator__name', 'location__name'),
                'permissions': (('approve_factdataindicator', 'Can approve Indicator Data'), ('reject_factdataindicator', 'Can reject Indicator Data'), ('pend_factdataindicator', 'Can pend Indicator Data')),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StgIndicator',
            fields=[
                ('indicator_id', models.AutoField(primary_key=True, serialize=False)),
                ('afrocode', models.CharField(blank=True, max_length=10, unique=True, verbose_name='Indicator Code')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Indicator',
                'verbose_name_plural': '  Indicators',
                'db_table': 'stg_indicator',
                'ordering': ('afrocode',),
                'managed': True,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgIndicatorDomain',
            fields=[
                ('domain_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=45, null=True, unique=True, verbose_name='Domain Code')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Indicator Domain',
                'verbose_name_plural': ' Indicator Domains',
                'db_table': 'stg_indicator_domain',
                'ordering': ('code',),
                'managed': True,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgIndicatorDomainTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=150, verbose_name='Domain Name')),
                ('shortname', models.CharField(max_length=45, verbose_name='Short Name')),
                ('level', models.SmallIntegerField(default=1, verbose_name='Level')),
                ('description', models.TextField(blank=True, null=True)),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='indicators.StgIndicatorDomain')),
            ],
            options={
                'verbose_name': 'Indicator Domain Translation',
                'db_table': 'stg_indicator_domain_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgIndicatorReference',
            fields=[
                ('reference_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_lastupdated', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Reference',
                'verbose_name_plural': ' References',
                'db_table': 'stg_indicator_reference',
                'managed': True,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgIndicatorReferenceTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(default='Global List of 100 Core Health Indicators', max_length=230, verbose_name='Reference Name')),
                ('shortname', models.CharField(blank=True, max_length=50, null=True, verbose_name='Short Name')),
                ('description', models.TextField(blank=True, null=True)),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='indicators.StgIndicatorReference')),
            ],
            options={
                'verbose_name': 'Reference Translation',
                'db_table': 'stg_indicator_reference_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StgIndicatorTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=500, verbose_name='Indicator Name')),
                ('shortname', models.CharField(max_length=120, null=True, unique=True, verbose_name='Short Name')),
                ('gen_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Geneva Code')),
                ('definition', models.TextField(null=True, verbose_name='Indicator Definition')),
                ('preferred_datasources', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Data Sources')),
                ('numerator_description', models.TextField(blank=True, null=True, verbose_name='Numerator Description')),
                ('denominator_description', models.TextField(blank=True, null=True, verbose_name='Denominator Description')),
            ],
            options={
                'verbose_name': 'Indicator Translation',
                'db_table': 'stg_indicator_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='IndicatorProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Data Grid Form',
                'verbose_name_plural': '   Multi-records Grid',
                'managed': False,
                'proxy': True,
            },
            bases=('indicators.stgindicator',),
        ),
        migrations.AddField(
            model_name='stgindicatortranslation',
            name='master',
            field=parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='indicators.StgIndicator'),
        ),
        migrations.AddField(
            model_name='stgindicatordomain',
            name='indicators',
            field=models.ManyToManyField(blank=True, db_table='stg_indicator_domain_members', to='indicators.StgIndicator', verbose_name='Indicators'),
        ),
        migrations.AddField(
            model_name='stgindicatordomain',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='indicators.StgIndicatorDomain', verbose_name='Parent Domain'),
        ),
        migrations.AddField(
            model_name='stgindicator',
            name='measuremethod',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='home.StgMeasuremethod', verbose_name='Type of Measure'),
        ),
        migrations.AddField(
            model_name='stgindicator',
            name='reference',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='indicators.StgIndicatorReference', verbose_name='Indicator Reference'),
        ),
        migrations.AddField(
            model_name='factdataindicator',
            name='indicator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='indicators.StgIndicator', verbose_name='Indicator Name'),
        ),
        migrations.AddField(
            model_name='factdataindicator',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='regions.StgLocation', verbose_name='Location Name'),
        ),
        migrations.AddField(
            model_name='factdataindicator',
            name='valuetype',
            field=models.ForeignKey(default=999, on_delete=django.db.models.deletion.PROTECT, to='home.StgValueDatatype', verbose_name='Data Type'),
        ),
        migrations.AlterUniqueTogether(
            name='stgindicatortranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='stgindicatorreferencetranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='stgindicatordomaintranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='factdataindicator',
            unique_together={('indicator', 'location', 'categoryoption', 'datasource', 'period')},
        ),
    ]
